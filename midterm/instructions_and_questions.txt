Instructions for Mid-Term submission and Git Review (10pts):
 - Create a git repository for your answers
 - Add and Commit as you work through the questions and programming problems
 - Your git log should reflect your work, don't just commit after you have finished working
 - Use .gitignore to ignore any files that are not relevant to the midterm
 - E-mail me your ssh public key
 - I will email you back with your repository name
 - Add a remote to your git repository: git@reneedv.com:RubyWinter2014/YOURREPOSITORYNAME.git
 - Push your changes to the remote
 - After 6pm Thursday February 20th you will not be able to push to your remote repository (or clone).

 Questions (20pts):
 - What are the three uses of the curly brackets {} in Ruby?

 1. Create hashes
 2. Syntax for inline blocks
 3. invoke precedence over do..end blocks

 - What is a regular expression and what is a common use for them?

 A regular expression allows you to find a pattern, and then manipulate that pattern. Replacing, deleting or verifying the patter are all examples of what you can do with regular expressions. 

 - What is the difference between how a String, a symbol, a FixNum, and a Float are stored in Ruby?

 - Are these two statements equivalent? Why or Why Not?
   1. x, y = "hello", "hello"
   2. x = y = "hello"
- What is the difference between a Range and an Array?

A range holds a specific set of information that is consistent, such as 1..10, while an array can hold any informationt that you fill it with. 

- Why would I use a Hash instead of an Array? 

A Hash is indexed using any type of object rather than just intergers in arrays. For instance, if you wanted to be able to call an object through a label, such as "phone" => "android", you would want to use a hash. 

- What is your favorite thing about Ruby so far?

For me the world of programming is still new and fresh, so I am enjoying learning the different ways I will be able to manipulate and store data to create awesome applications. 

- What is your least favorite thing about Ruby so far?

That there is a seemingly infinite number of ways to do anything. I appreciate that flexibility, but whenever I have a question about completing a task, the response is "well, it depends...".

 Programming Problems (10pts each):
 - Write a passing rspec file called even_number_spec.rb that tests a class called EvenNumber.
    - The EvenNumber class should:
       - Only allow even numbers
       - Get the next even number
       - Compare even numbers
       - Generate a range of even numbers
- Make the rspec tests in wish_list_spec.rb pass by writing a WishList class
   - The WishList class should:
      - Mixin Enumerable
      - Define each so it returns wishes as strings with their index as part of the string

Mid-Term Spec (50pts):
- Make the tests pass.


